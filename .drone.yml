---
kind: pipeline
type: docker
name: develop build

trigger:
  branch:
    - develop

services:
  - name: docker
    image: docker:20.10.22-dind-alpine3.17
    privileged: true
    volumes:
      - name: dockersock
        path: /var/run

volumes:
  - name: m2
    host:
      path: /drone/volume/m2
  - name: dockersock
    temp: {}

steps:
  - name: create jar
    image: maven:3.8.6-eclipse-temurin-17
    volumes:
      - name: m2
        path: /root/.m2/repository
    commands:
      - mvn -U clean package

  - name: docker publish develop
    image: upagge/docker-buildx:latest
    environment:
      DOCKER_REGISTRY_TOKEN:
        from_secret: DOCKER_REGISTRY_TOKEN
      DOCKER_IMAGE_NAME:
        from_secret: DOCKER_IMAGE_NAME
      DOCKER_REGISTRY_USER:
        from_secret: DOCKER_REGISTRY_USER
    volumes:
      - name: dockersock
        path: /var/run
    commands:
      - echo "$DOCKER_REGISTRY_TOKEN" | docker login docker.io --username $DOCKER_REGISTRY_USER --password-stdin
      - docker buildx create --use
      - docker buildx build -f Dockerfile-develop --push --platform linux/amd64,linux/arm64/v8 -t "$DOCKER_IMAGE_NAME:develop" .

---

kind: pipeline
type: docker
name: release build

trigger:
  ref:
    - refs/tags/v.*.*.*

services:
  - name: docker
    image: docker:20.10.22-dind-alpine3.17
    privileged: true
    volumes:
      - name: dockersock
        path: /var/run

volumes:
  - name: m2
    host:
      path: /drone/volume/m2
  - name: dockersock
    temp: {}

steps:
  - name: create jar
    image: maven:3.8.6-eclipse-temurin-17
    volumes:
      - name: m2
        path: /root/.m2/repository
    commands:
      - mvn -U clean package

  - name: docker publish release
    image: upagge/docker-buildx:latest
    environment:
      DOCKER_REGISTRY_TOKEN:
        from_secret: DOCKER_REGISTRY_TOKEN
      DOCKER_IMAGE_NAME:
        from_secret: DOCKER_IMAGE_NAME
      DOCKER_REGISTRY_USER:
        from_secret: DOCKER_REGISTRY_USER
    volumes:
      - name: dockersock
        path: /var/run
    commands:
      - echo "$DOCKER_REGISTRY_TOKEN" | docker login docker.io --username $DOCKER_REGISTRY_USER --password-stdin
      - docker buildx create --use
      - docker buildx build --push --platform linux/amd64,linux/arm64/v8 -t "$DOCKER_IMAGE_NAME:latest" -t "$DOCKER_IMAGE_NAME:$DRONE_TAG" .

---
kind: pipeline
type: docker
name: create-docs-site

trigger:
  branch:
    - docs
    - master

steps:
  - name: build site
    image: git.struchkov.dev/upagge/mkdocs-material-insiders:latest
    volumes:
      - name: mkdocs_cache
        path: ${DRONE_WORKSPACE}/documentation/.cache
    environment:
      SSH_DEPLOY_KEY:
        from_secret: SSH_DEPLOY_KEY
      SSH_DEPLOY_HOST:
        from_secret: SSH_DEPLOY_HOST
      SSH_DEPLOY_PORT:
        from_secret: SSH_DEPLOY_PORT
      SSH_DEPLOY_PATH:
        from_secret: SSH_DEPLOY_PATH
      SSH_DEPLOY_USER:
        from_secret: SSH_DEPLOY_USER
    commands:
      - eval $(ssh-agent -s)
      - mkdir -p ~/.ssh
      - echo "$SSH_DEPLOY_KEY" >> ~/.ssh/id_rsa
      - chmod 700 ~/.ssh
      - chmod 600 ~/.ssh/id_rsa
      - ssh-keyscan -p $SSH_DEPLOY_PORT $SSH_DEPLOY_HOST >> ~/.ssh/known_hosts
      - chmod 644 ~/.ssh/known_hosts
      - cd documentation
      - mkdocs build --site-dir gitlab-notification
      - scp -r -P $SSH_DEPLOY_PORT ./gitlab-notification $SSH_DEPLOY_USER@$SSH_DEPLOY_HOST:$SSH_DEPLOY_PATH

image_pull_secrets:
  - DOCKER_AUTH

volumes:
  - name: mkdocs_cache
    host:
      path: /drone/volume/mkdocs_cache/gitlab_notification

---
kind: signature
hmac: f740dcba9e4e0d38ddd1789bd5eaa75502af9137c6e6c0710be953c61233d90d

...
