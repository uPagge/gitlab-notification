stages:
  - build
  - deploy

build:
  image: maven:3.8.4-openjdk-17
  stage: build
  variables:
    MAVEN_OPTS: "-Dmaven.repo.local=./.m2/repository"
  only:
    - test
#  except:
#    - branches
  script:
    - 'mvn -U clean package'
  artifacts:
    paths:
      - gitlab-app/target/gitlab-notification.jar

docker-build:
  image: docker/buildx-bin
  stage: deploy
  only:
    - test
#  except:
#    - branches
  services:
    - docker:dind
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login $CI_REGISTRY --username $CI_REGISTRY_USER --password-stdin
  script:
    - cd gitlab-app
    - docker buildx create --use
    - docker buildx build --push --no-cache --platform linux/arm/v7,linux/arm64/v8,linux/amd64 -f Dockerfile-linux -t "$CI_REGISTRY_IMAGE:latest" -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_TAG" .
#    - docker push "$CI_REGISTRY_IMAGE:latest"
#    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_TAG"

#docker-build-master:
#  image: docker/buildx-bin
#  stage: deploy
#  only:
#    - /^v.*$/
#  except:
#    - branches
#  services:
#    - docker:dind
#  before_script:
#    - echo "$CI_REGISTRY_PASSWORD" | docker login $CI_REGISTRY --username $CI_REGISTRY_USER --password-stdin
#  script:
#    - cd gitlab-app
#    - docker build --no-cache -f Dockerfile-linux -t "$CI_REGISTRY_IMAGE:latest" . -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_TAG"
#    - docker push "$CI_REGISTRY_IMAGE:latest"
#    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_TAG"